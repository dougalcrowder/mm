<script src="{{ 'details-disclosure.js' | asset_url }}" defer="defer"></script>
<script src="{{ 'details-modal.js' | asset_url }}" defer="defer"></script>
<script src="{{ 'cart-notification.js' | asset_url }}" defer="defer"></script>

<svg xmlns="http://www.w3.org/2000/svg" class="hidden">
  <symbol id="icon-search" viewbox="0 0 18 19" fill="none">
    <path fill-rule="evenodd" clip-rule="evenodd" d="M11.03 11.68A5.784 5.784 0 112.85 3.5a5.784 5.784 0 018.18 8.18zm.26 1.12a6.78 6.78 0 11.72-.7l5.4 5.4a.5.5 0 11-.71.7l-5.41-5.4z" fill="currentColor"/>
  </symbol>

  <symbol id="icon-close" class="icon icon-close" fill="none" viewBox="0 0 18 17">
    <path d="M.865 15.978a.5.5 0 00.707.707l7.433-7.431 7.579 7.282a.501.501 0 00.846-.37.5.5 0 00-.153-.351L9.712 8.546l7.417-7.416a.5.5 0 10-.707-.708L8.991 7.853 1.413.573a.5.5 0 10-.693.72l7.563 7.268-7.418 7.417z" fill="currentColor">
  </symbol>
</svg>
<sticky-header class="header-wrapper">
  <header class="header{% if section.settings.menu != blank %} header--has-menu{% endif %}">
  {%- if section.settings.menu != blank -%}
    <button class="nude hamburger hamburger--spring" type="button">
      <span class="hamburger-box">
        <span class="hamburger-inner"></span>
      </span>
    </button>
  {%- endif -%}

    {%- if section.settings.menu != blank -%}
      <nav class="header__inline-menu">
        <ul class="list-menu list-menu--inline" role="list" id="mainNav">
          {%- for link in section.settings.menu.links -%}
            <li{% if link.links != blank %} class="subnav_active"{% endif %}>
              {%- if link.links != blank -%}
                <span class="header__menu-item{% if link.child_active %} header__active-menu-item{% endif %}">{{ link.title | escape }} {% render 'icon-caret' %}</span>
                    <div class="header__submenu">
                        <div class="inner flex">
                          <ul class="list-menu flex" role="list" tabindex="-1">
                            {%- for childlink in link.links -%}
                            <li{% if childlink.links != blank %} class="sub_subnav flex"{% endif %}>
                            {%- if childlink.links == blank -%}
                              <a href="{{ childlink.url }}" class="larger_link{% if childlink.current %} list-menu__item--active{% endif %}"{% if childlink.current %} aria-current="page"{% endif %}>
                                {{ childlink.title | escape }}
                              </a>
                            {%- else -%}
                            <div class="subnav_title">
                                  {{ childlink.title | escape }}
                            </div>
                            <ul class="subnav_menu">
                              {%- for grandchildlink in childlink.links -%}
                                <li>
                                  <a href="{{ grandchildlink.url }}" class="header__menu-item list-menu__item focus-inset caption-large{% if grandchildlink.current %} list-menu__item--active{% endif %}"{% if grandchildlink.current %} aria-current="page"{% endif %}>
                                    {{ grandchildlink.title | escape }}
                                  </a>
                                </li>
                              {%- endfor -%}
                            </ul>
                            {%- endif -%}
                          </li>
                        {%- endfor -%}
                        </ul>
                          {%- for block in section.blocks -%}
                            {%- if block.settings.menu_item_handle == link.handle -%}
                            
                            <div class="creative">
                              {%- if block.settings.image != blank -%}
                                {%- assign image = block.settings.image -%}
                                <picture class="navshot">
                                  <source srcset="{{ image | img_url: '250x200', crop: 'center', format: 'pjpg' }}" media="(min-width: 768px)" />
                                  <source srcset="{{ image | img_url: '200x160', crop: 'center', format: 'pjpg' }}" media="(min-width: 320px)" />
                                  <img loading="lazy" class="heroshot_image" src="{{ image | img_url: '1x1' }}" alt="{{ image.alt | escape }}" />
                                </picture>
                              {%- endif -%}
                              
                              {%- if block.settings.title != blank -%}
                              <strong>
                              {{ block.settings.title }}
                              </strong>
                              {%- endif -%}
                              
                              {%- if block.settings.subtitle != blank -%}
                              {{ block.settings.subtitle }}
                              {%- endif -%}
                              
                              {%- if block.settings.link != blank -%}
                              <a href="{{ block.settings.link }}"><span class="visually-hidden">{{ block.settings.title }}</span></a>
                              {%- endif -%}
                              
                            </div>
                            {%- endif -%}
                          {%- endfor -%}
                        </div>
                    </div>
              {%- else -%}
                <a href="{{ link.url }}" class="header__menu-item header__menu-item list-menu__item focus-inset"{% if link.current %} aria-current="page"{% endif %}>
                  <span {%- if link.current %} class="header__active-menu-item"{% endif %}>{{ link.title | escape }}</span>
                </a>
              {%- endif -%}
            </li>
          {%- endfor -%}
        </ul>
      </nav>
    {%- endif -%}
    <div class="header_links flex">
      {% comment %}
      change css to justify space between
      <a href="https://trade.mollymahon.com/" class="trade_link top_shift">Trade Login</a>
      {% endcomment %}
      {% if section.settings.menu_message != blank %}
      <div class="menu_message top_shift">{{ section.settings.menu_message }}</div>
      {% endif %}
      <div class="header__icons">
      {%- if shop.customer_accounts_enabled -%}
        <a href="{%- if customer -%}{{ routes.account_url }}{%- else -%}{{ routes.account_login_url }}{%- endif -%}" class="login_link top_shift">
            {%- liquid
              if customer
                echo 'customer.account_fallback' | t
              else
                echo 'customer.log_in' | t
              endif
            -%}
        </a>
      {%- endif -%}

      <a href="{{ routes.cart_url }}" class="header__icon header__icon--cart link focus-inset" id="cart-icon-bubble">
        {%- liquid
          if cart == empty
            render 'icon-cart-empty'
          else
            render 'icon-cart'
          endif
        -%}
        <span class="visually-hidden">{{ 'templates.cart.cart' | t }}</span>
        {%- if cart != empty -%}
          <div class="cart-count-bubble">
            {%- if cart.item_count < 100 -%}
              <span aria-hidden="true">{{ cart.item_count }}</span>
            {%- endif -%}
            <span class="visually-hidden">{{ 'sections.header.cart_count' | t: count: cart.item_count }}</span>
          </div>
        {%- endif -%}
      </a>
    </div>
    </div>
  </header>
</sticky-header>

<script>
  
  function navCollapse() { 
    document.querySelectorAll(".list-menu .subnav_active .header__submenu").forEach(function(el) {
      el.classList.remove("active");;
    });
  }
  
  document.querySelectorAll('#mainNav li').forEach( function(navLi) {
    if(navLi.classList.contains('subnav_active')) {
      navLi.addEventListener('click', function (){        
        if (navLi.classList.contains('active')) {
          navLi.classList.remove('showCt');
          setTimeout(function() {
            navLi.classList.remove('showBg');
          }, 500);
          setTimeout(function() {
            navLi.classList.remove('active');
          }, 550);
        } else {
          document.querySelectorAll("#mainNav li.active").forEach(function(navLiB) {
            navLiB.classList.remove('showCt');
            setTimeout(function() {
              navLiB.classList.remove('showBg');
            }, 500);
            setTimeout(function() {
              navLiB.classList.remove('active');
            }, 550);
          });
          setTimeout(function() {
            navLi.classList.add('active');
            navLi.classList.add('showBg');
            setTimeout(function() {
              navLi.classList.add('showCt');
            }, 500);
          }, 50);
        }
        
      });
    }
  });
  
  const hamburger = document.querySelector(".hamburger");
  const nav = document.querySelector(".header__inline-menu");
  hamburger.addEventListener("click", function() {
    if (nav.classList.contains("active")) {
      hamburger.classList.remove("is-active");
      nav.classList.remove("active");
      document.body.classList.remove("nav-active");
      navCollapse();
    } else {
      hamburger.classList.add("is-active");
      nav.classList.add("active");
      document.body.classList.add("nav-active");
    }
    
  });
</script>

{%- render 'cart-notification', color_scheme: section.settings.color_scheme -%}

{% javascript %}
  class StickyHeader extends HTMLElement {
    constructor() {
      super();
    }

    connectedCallback() {
      this.header = document.getElementById('shopify-section-header');
      this.headerBounds = {};
      this.currentScrollTop = 0;
      this.preventReveal = false;

      this.onScrollHandler = this.onScroll.bind(this);
      this.hideHeaderOnScrollUp = () => this.preventReveal = true;

      this.addEventListener('preventHeaderReveal', this.hideHeaderOnScrollUp);
      window.addEventListener('scroll', this.onScrollHandler, false);

      this.createObserver();
    }

    disconnectedCallback() {
      this.removeEventListener('preventHeaderReveal', this.hideHeaderOnScrollUp);
      window.removeEventListener('scroll', this.onScrollHandler);
    }

    createObserver() {
      let observer = new IntersectionObserver((entries, observer) => {
        this.headerBounds = entries[0].intersectionRect;
        observer.disconnect();
      });

      observer.observe(this.header);
    }

    onScroll() {
      const scrollTop = window.pageYOffset || document.documentElement.scrollTop;

      if (scrollTop > this.currentScrollTop && scrollTop > this.headerBounds.bottom) {
        requestAnimationFrame(this.hide.bind(this));
      } else if (scrollTop < this.currentScrollTop && scrollTop > this.headerBounds.bottom) {
        if (!this.preventReveal) {
          requestAnimationFrame(this.reveal.bind(this));
        } else {
          window.clearTimeout(this.isScrolling);

          this.isScrolling = setTimeout(() => {
            this.preventReveal = false;
          }, 66);

          requestAnimationFrame(this.hide.bind(this));
        }
      } else if (scrollTop <= this.headerBounds.top) {
        requestAnimationFrame(this.reset.bind(this));
      }


      this.currentScrollTop = scrollTop;
    }

    hide() {
      this.header.classList.add('shopify-section-header-hidden', 'shopify-section-header-sticky');
      this.closeMenuDisclosure();
    }

    reveal() {
      this.header.classList.add('shopify-section-header-sticky', 'animate');
      this.header.classList.remove('shopify-section-header-hidden');
    }

    reset() {
      this.header.classList.remove('shopify-section-header-hidden', 'shopify-section-header-sticky', 'animate');
    }

    closeMenuDisclosure() {
      this.disclosures = this.disclosures || this.header.querySelectorAll('details-disclosure');
      this.disclosures.forEach(disclosure => disclosure.close());
    }
  }

  customElements.define('sticky-header', StickyHeader);
{% endjavascript %}

<script type="application/ld+json">
  {
    "@context": "http://schema.org",
    "@type": "Organization",
    "name": {{ shop.name | json }},
    {% if section.settings.logo %}
      {% assign image_size = section.settings.logo.width | append: 'x' %}
      "logo": {{ section.settings.logo | img_url: image_size | prepend: "https:" | json }},
    {% endif %}
    "sameAs": [
      {{ settings.social_twitter_link | json }},
      {{ settings.social_facebook_link | json }},
      {{ settings.social_pinterest_link | json }},
      {{ settings.social_instagram_link | json }},
      {{ settings.social_tumblr_link | json }},
      {{ settings.social_snapchat_link | json }},
      {{ settings.social_youtube_link | json }},
      {{ settings.social_vimeo_link | json }}
    ],
    "url": {{ shop.url | append: page.url | json }}
  }
</script>

{% comment %}
{%- if request.page_type == 'index' -%}
  {% assign potential_action_target = shop.url | append: routes.search_url | append: "?q={search_term_string}" %}
  <script type="application/ld+json">
    {
      "@context": "http://schema.org",
      "@type": "WebSite",
      "name": {{ shop.name | json }},
      "potentialAction": {
        "@type": "SearchAction",
        "target": {{ potential_action_target | json }},
        "query-input": "required name=search_term_string"
      },
      "url": {{ shop.url | append: page.url | json }}
    }
  </script>
{%- endif -%}
{% endcomment %}


{% schema %}
{
"name": "t:sections.header.name",
"settings": [
  {
    "type": "link_list",
    "id": "menu",
    "default": "main-menu",
    "label": "t:sections.header.settings.menu.label"
  },
  {
    "type": "text",
    "id": "menu_message",
    "default": "FREE UK DELIVERY WHEN YOU SPEND £50 OR MORE",
    "label": "Menu area message"
  }
],
"blocks": [{
  "type": "menu_images",
  "name": "Menu Creative",
  "settings": [{
      "type": "image_picker",
      "id": "image",
      "label": "t:sections.collage.blocks.image.settings.image.label"
    },
    {
      "type": "text",
      "id": "title",
      "label": "Title"
    },
    {
      "type": "text",
      "id": "subtitle",
      "label": "Subtitle"
    },
    {
      "type": "url",
      "id": "link",
      "label": "Link"
    },
    {
      "type": "text",
      "id": "menu_item_handle",
      "label": "Menu item handle",
      "info": "This is the menu item handle"
    }
    ]
  }
],
"presets": [
  {
    "name": "Menu Creative",
    "blocks": [
      {
        "type": "menu_images"
      }
    ]
  }
]
}
{% endschema %}
