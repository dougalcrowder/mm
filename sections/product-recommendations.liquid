{% comment %}

<link rel="stylesheet" href="{{ 'component-card.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="{{ 'component-price.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="{{ 'component-product-grid.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="{{ 'section-product-recommendations.css' | asset_url }}" media="print" onload="this.media='all'">

<noscript>{{ 'component-card.css' | asset_url | stylesheet_tag }}</noscript>
<noscript>{{ 'component-price.css' | asset_url | stylesheet_tag }}</noscript>
<noscript>{{ 'component-product-grid.css' | asset_url | stylesheet_tag }}</noscript>
<noscript>{{ 'section-product-recommendations.css' | asset_url | stylesheet_tag }}</noscript>

{% endcomment %}

<script>
  
  fetch("/recommendations/products.json?product_id={{ product.id }}&limit=10")
    
    .then(response => response.json())
    .then(({ products }) => {
      console.log(products);
    // if (products.length > 0) {      
    //   const firstRecommendedProduct = products[0]; 
    //   alert(  
    //   `The title of the first recommended product is: ${firstRecommendedProduct.title}`
    // ); 
    // }
    if (products.length > 0) {
      const productRecommendations = document.getElementById("productRecommendations");
      let productsTitle = '<h4>{{ section.settings.heading | escape }}</h4>';
      
      let numberra = 0;
      products.forEach((item, index) => {
        
        if(item.type == 'Fabric Sample' || item.type == 'Wallpaper Sample' || numberra === 4 ) { } else {
          let ogImage = item.featured_image;
          let imageSized = ogImage.replace(".jpg", "_360x360_crop_center.progressive.jpg");
          const singleProduct = '<div class="' + item.type + ' product_card product' + index + '"><a href="' + item.url + '"><img class="lazyimage" loading="lazy" src="' + imageSized + '" /><span class="serif">' + item.title + '<span></a></div>';
          // console.log(singleProduct);
          // predictiveSearchResults.append('<div>' + singleProduct + '</div>');
          productRecommendations.insertAdjacentHTML( 'beforeend', singleProduct );
          numberra++;
        }
      });
      
      if(numberra > 0) {
        productRecommendations.classList.add("active");
        productRecommendations.insertAdjacentHTML( 'beforebegin', productsTitle );
      }
    }
    }
  );
  
</script>

<div class="recommended inner">
  <div id="productRecommendations" class="grid product_grid recommended_product_grid"></div>
</div>



{% schema %}
{
  "name": "t:sections.product-recommendations.name",
  "tag": "section",
  "class": "spaced-section",
  "settings": [
    {
      "type": "text",
      "id": "heading",
      "default": "You may also like",
      "label": "t:sections.product-recommendations.settings.heading.label"
    }
  ]
}
{% endschema %}
