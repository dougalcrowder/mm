(()=>{function e(t){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},e(t)}function t(e){return function(e){if(Array.isArray(e))return r(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||function(e,t){if(!e)return;if("string"==typeof e)return r(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return r(e,t)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function r(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function n(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function o(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,a(n.key),n)}}function i(e,t,r){return t&&o(e.prototype,t),r&&o(e,r),Object.defineProperty(e,"prototype",{writable:!1}),e}function a(t){var r=function(t,r){if("object"!=e(t)||!t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,r||"default");if("object"!=e(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==e(r)?r:String(r)}function c(t,r,n){return r=m(r),function(t,r){if(r&&("object"===e(r)||"function"==typeof r))return r;if(void 0!==r)throw new TypeError("Derived constructors may only return object or undefined");return u(t)}(t,f()?Reflect.construct(r,n||[],m(t).constructor):r.apply(t,n))}function u(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function l(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&d(e,t)}function s(e){var t="function"==typeof Map?new Map:void 0;return s=function(e){if(null===e||!function(e){try{return-1!==Function.toString.call(e).indexOf("[native code]")}catch(t){return"function"==typeof e}}(e))return e;if("function"!=typeof e)throw new TypeError("Super expression must either be null or a function");if(void 0!==t){if(t.has(e))return t.get(e);t.set(e,r)}function r(){return function(e,t,r){if(f())return Reflect.construct.apply(null,arguments);var n=[null];n.push.apply(n,t);var o=new(e.bind.apply(e,n));return r&&d(o,r.prototype),o}(e,arguments,m(this).constructor)}return r.prototype=Object.create(e.prototype,{constructor:{value:r,enumerable:!1,writable:!0,configurable:!0}}),d(r,e)},s(e)}function f(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(f=function(){return!!e})()}function d(e,t){return d=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},d(e,t)}function m(e){return m=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},m(e)}var y=function(e){function r(){var e;n(this,r),(e=c(this,r)).onActiveFilterClick=e.onActiveFilterClick.bind(u(e)),e.debouncedOnSubmit=debounce((function(t){e.onSubmitHandler(t)}),500),e.querySelector("form").addEventListener("input",e.debouncedOnSubmit.bind(u(e)));var t=e.querySelector("#FacetsWrapperDesktop");return t&&t.addEventListener("keyup",onKeyUpEscape),e}return l(r,e),i(r,[{key:"onSubmitHandler",value:function(e){e.preventDefault();var t=new FormData(e.target.closest("form")),n=new URLSearchParams(t).toString();r.renderPage(n,e)}},{key:"onActiveFilterClick",value:function(e){e.preventDefault(),r.toggleActiveFacets(),r.renderPage(new URL(e.currentTarget.href).searchParams.toString())}}],[{key:"setListeners",value:function(){window.addEventListener("popstate",(function(e){var t=e.state?e.state.searchParams:r.searchParamsInitial;t!==r.searchParamsPrev&&r.renderPage(t,null,!1)}))}},{key:"toggleActiveFacets",value:function(){var e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];document.querySelectorAll(".js-facet-remove").forEach((function(t){t.classList.toggle("disabled",e)}))}},{key:"renderPage",value:function(e,t){var n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];r.searchParamsPrev=e;var o=r.getSections(),i=document.getElementById("ProductCount"),a=document.getElementById("ProductCountDesktop");document.getElementById("ProductGridContainer").querySelector(".collection").classList.add("loading"),i&&i.classList.add("loading"),a&&a.classList.add("loading"),o.forEach((function(n){var o="".concat(window.location.pathname,"?section_id=").concat(n.section,"&").concat(e),i=function(e){return e.url===o};r.filterData.some(i)?r.renderSectionFromCache(i,t):r.renderSectionFromFetch(o,t)})),n&&r.updateURLHash(e)}},{key:"renderSectionFromFetch",value:function(e,n){fetch(e).then((function(e){return e.text()})).then((function(o){var i=o;r.filterData=[].concat(t(r.filterData),[{html:i,url:e}]),r.renderFilters(i,n),r.renderProductGridContainer(i),r.renderProductCount(i)}))}},{key:"renderSectionFromCache",value:function(e,t){var n=r.filterData.find(e).html;r.renderFilters(n,t),r.renderProductGridContainer(n),r.renderProductCount(n)}},{key:"renderProductGridContainer",value:function(e){document.getElementById("ProductGridContainer").innerHTML=(new DOMParser).parseFromString(e,"text/html").getElementById("ProductGridContainer").innerHTML}},{key:"renderProductCount",value:function(e){var t=(new DOMParser).parseFromString(e,"text/html").getElementById("ProductCount").innerHTML,r=document.getElementById("ProductCount"),n=document.getElementById("ProductCountDesktop");r.innerHTML=t,r.classList.remove("loading"),n&&(n.innerHTML=t,n.classList.remove("loading"))}},{key:"renderFilters",value:function(e,t){var n=(new DOMParser).parseFromString(e,"text/html"),o=n.querySelectorAll("#FacetFiltersForm .js-filter, #FacetFiltersFormMobile .js-filter, #FacetFiltersFormMobileTwo .js-filter"),i=function(e){var r=t?t.target.closest(".js-filter"):void 0;return!!r&&e.dataset.index===r.dataset.index},a=Array.from(o).filter((function(e){return!i(e)})),c=Array.from(o).find(i);a.forEach((function(e){document.querySelector('.js-filter[data-index="'.concat(e.dataset.index,'"]')).innerHTML=e.innerHTML})),r.renderActiveFacets(n),r.renderAdditionalElements(n),c&&r.renderCounts(c,t.target.closest(".js-filter"))}},{key:"renderActiveFacets",value:function(e){[".active-facets-mobile",".active-facets-desktop"].forEach((function(t){var r=e.querySelector(t);r&&(document.querySelector(t).innerHTML=r.innerHTML)})),r.toggleActiveFacets(!1)}},{key:"renderAdditionalElements",value:function(e){[".mobile-facets__open",".mobile-facets__count",".sorting"].forEach((function(t){e.querySelector(t)&&(document.querySelector(t).innerHTML=e.querySelector(t).innerHTML)})),document.getElementById("FacetFiltersFormMobile").closest("menu-drawer").bindEvents()}},{key:"renderCounts",value:function(e,t){var r=t.querySelector(".facets__selected");e.querySelector(".facets__selected")&&r&&(t.querySelector(".facets__selected").outerHTML=e.querySelector(".facets__selected").outerHTML)}},{key:"updateURLHash",value:function(e){history.pushState({searchParams:e},"","".concat(window.location.pathname).concat(e&&"?".concat(e)))}},{key:"getSections",value:function(){return[{section:document.getElementById("product-grid").dataset.id}]}}]),r}(s(HTMLElement));y.filterData=[],y.searchParamsInitial=window.location.search.slice(1),y.searchParamsPrev=window.location.search.slice(1),customElements.define("facet-filters-form",y),y.setListeners();var v=function(e){function t(){var e;return n(this,t),(e=c(this,t)).querySelectorAll("input").forEach((function(t){return t.addEventListener("change",e.onRangeChange.bind(u(e)))})),e.setMinAndMaxValues(),e}return l(t,e),i(t,[{key:"onRangeChange",value:function(e){this.adjustToValidValues(e.currentTarget),this.setMinAndMaxValues()}},{key:"setMinAndMaxValues",value:function(){var e=this.querySelectorAll("input"),t=e[0],r=e[1];r.value&&t.setAttribute("max",r.value),t.value&&r.setAttribute("min",t.value),""===t.value&&r.setAttribute("min",0),""===r.value&&t.setAttribute("max",r.getAttribute("max"))}},{key:"adjustToValidValues",value:function(e){var t=Number(e.value),r=Number(e.getAttribute("min")),n=Number(e.getAttribute("max"));t<r&&(e.value=r),t>n&&(e.value=n)}}]),t}(s(HTMLElement));customElements.define("price-range",v);var p=function(e){function t(){var e;return n(this,t),(e=c(this,t)).querySelector("a").addEventListener("click",(function(t){t.preventDefault(),(e.closest("facet-filters-form")||document.querySelector("facet-filters-form")).onActiveFilterClick(t)})),e}return l(t,e),i(t)}(s(HTMLElement));customElements.define("facet-remove",p)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,